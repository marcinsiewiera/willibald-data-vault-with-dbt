{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-04-02T21:04:09.327894Z", "invocation_id": "44eaf487-396f-4ccb-898f-05e61f6ff9f4", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-02T21:03:59.278145Z", "completed_at": "2025-04-02T21:03:59.638717Z"}, {"name": "execute", "started_at": "2025-04-02T21:03:59.639289Z", "completed_at": "2025-04-02T21:04:02.463325Z"}], "thread_id": "main", "execution_time": 3.18518, "adapter_response": {}, "message": "ddvug_willibald_samen.on-run-start.0 passed", "failures": 0, "unique_id": "operation.ddvug_willibald_samen.ddvug_willibald_samen-on-run-start-0", "compiled": true, "compiled_code": "\n\n\n\n  \n\n  \n  \n    \n    \n    \n    \n\n\n\n\n\n\n\n\ncreate schema if not exists DWH_00_META;\n\n\ncreate schema if not exists DWH_01_EXT;\n\n \n\n\n\nCREATE or REPLACE FILE FORMAT DWH_01_EXT.FF_SEMICOLON \nCOMPRESSION = 'AUTO' FIELD_DELIMITER = ';' RECORD_DELIMITER = '\\n' SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = 'NONE' TRIM_SPACE = FALSE ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE ESCAPE = 'NONE' ESCAPE_UNENCLOSED_FIELD = '\\134' DATE_FORMAT = 'AUTO' TIMESTAMP_FORMAT = 'AUTO' NULL_IF = ('\\\\N');\n\nCREATE or REPLACE STAGE DWH_01_EXT.DWH_01_EXT_STAGE \nURL = 's3://willibald-data/'\nFILE_FORMAT = DWH_01_EXT.FF_SEMICOLON;\n \n\n\n\ncreate table if not exists WILLIBALD_DATA_VAULT_WITH_DBT.DWH_00_META.META_HWM\n(\n    OBJECT_NAME       VARCHAR,\n    HWM_LDTS TIMESTAMPNTZ,\n    LOAD_DATE     TIMESTAMPNTZ\n);\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-02T21:04:02.469956Z", "completed_at": "2025-04-02T21:04:02.519430Z"}, {"name": "execute", "started_at": "2025-04-02T21:04:02.519642Z", "completed_at": "2025-04-02T21:04:08.703740Z"}], "thread_id": "Thread-1", "execution_time": 6.234665155410767, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb6d70-0305-fea6-0003-ac120001c5ce"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ddvug_willibald_samen.load_webshop_kunde", "compiled": true, "compiled_code": "with \nhwm as\n    (\n        select max(hwm_ldts) hwm_max_ts from WILLIBALD_DATA_VAULT_WITH_DBT.DWH_00_META.META_HWM where object_name = 'WILLIBALD_DATA_VAULT_WITH_DBT.dwh_02_load.load_webshop_kunde'\n    ),\n    hwm_max AS\n    (\n        select COALESCE(hwm.hwm_max_ts,to_timestamp('01.01.1900','DD.MM.YYYY') ) hwm_max_ts from hwm\n    ),\nraw_data AS \n(\n\tSELECT \n\t\t  TRIM(replace(right(filenamedate,19),'.csv','')::STRING) as \"LDTS_SOURCE_RAW\"\n                , TRIM(filenamedate::STRING) as \"RSRC_SOURCE_RAW\"\n\t\t, TRIM(trim(reverse(substring(reverse(replace(filenamedate,'.csv','')), 17,8))::varchar)::STRING) as \"EDTS_IN_RAW\"\n                , TRIM(value::STRING) as \"RAW_DATA_RAW\"\n                , TRIM(metadata$file_row_number::STRING) as \"ROW_NUMBER_RAW\"\n\t\t, TRIM(value:c1::STRING) as \"KUNDEID_RAW\"\n                , TRIM(value:c10::STRING) as \"KREDITKARTE_RAW\"\n                , TRIM(value:c11::STRING) as \"GUELTIGBIS_RAW\"\n                , TRIM(value:c12::STRING) as \"KKFIRMA_RAW\"\n                , TRIM(value:c2::STRING) as \"VEREINSPARTNERID_RAW\"\n                , TRIM(value:c3::STRING) as \"VORNAME_RAW\"\n                , TRIM(value:c4::STRING) as \"NAME_RAW\"\n                , TRIM(value:c5::STRING) as \"GESCHLECHT_RAW\"\n                , TRIM(value:c6::STRING) as \"GEBURTSDATUM_RAW\"\n                , TRIM(value:c7::STRING) as \"TELEFON_RAW\"\n                , TRIM(value:c8::STRING) as \"MOBIL_RAW\"\n                , TRIM(value:c9::STRING) as \"EMAIL_RAW\"\n    FROM WILLIBALD_DATA_VAULT_WITH_DBT.DWH_01_EXT.EXT_WEBSHOP_KUNDE\n)\nSELECT \n\t\t  TRY_TO_TIMESTAMP(\"LDTS_SOURCE_RAW\", 'YYYYMMDD_HH24MISS') as \"LDTS_SOURCE\"\n                , \"RSRC_SOURCE_RAW\" as \"RSRC_SOURCE\" \n\t\t, TRY_TO_DATE(\"EDTS_IN_RAW\", 'YYYYMMDD') as \"EDTS_IN\"\n                , \"RAW_DATA_RAW\" as \"RAW_DATA\"\n                , TRY_TO_NUMBER(\"ROW_NUMBER_RAW\") as \"ROW_NUMBER\" \n\t\t, \"KUNDEID_RAW\" as \"KUNDEID\"\n                , \"KREDITKARTE_RAW\" as \"KREDITKARTE\"\n                , \"GUELTIGBIS_RAW\" as \"GUELTIGBIS\"\n                , \"KKFIRMA_RAW\" as \"KKFIRMA\"\n                , \"VEREINSPARTNERID_RAW\" as \"VEREINSPARTNERID\"\n                , \"VORNAME_RAW\" as \"VORNAME\"\n                , \"NAME_RAW\" as \"NAME\"\n                , \"GESCHLECHT_RAW\" as \"GESCHLECHT\"\n                , TRY_TO_DATE(\"GEBURTSDATUM_RAW\", 'DD.MM.YYYY') as \"GEBURTSDATUM\"\n                , \"TELEFON_RAW\" as \"TELEFON\"\n                , \"MOBIL_RAW\" as \"MOBIL\"\n                , \"EMAIL_RAW\" as \"EMAIL\" \n\t\t, TRY_TO_TIMESTAMP(\"LDTS_SOURCE_RAW\", 'YYYYMMDD_HH24MISS') IS NOT NULL OR \"LDTS_SOURCE_RAW\" IS NULL as \"IS_LDTS_SOURCE_TYPE_OK\" \n\t\t, TRY_TO_DATE(\"EDTS_IN_RAW\", 'YYYYMMDD') IS NOT NULL OR \"EDTS_IN_RAW\" IS NULL as \"IS_EDTS_IN_TYPE_OK\"\n                , TRY_TO_NUMBER(\"ROW_NUMBER_RAW\") IS NOT NULL OR \"ROW_NUMBER_RAW\" IS NULL as \"IS_ROW_NUMBER_TYPE_OK\" \n\t\t, TRY_TO_DATE(\"GEBURTSDATUM_RAW\", 'DD.MM.YYYY') IS NOT NULL OR \"GEBURTSDATUM_RAW\" IS NULL as \"IS_GEBURTSDATUM_TYPE_OK\" \n\t\t, ROW_NUMBER() OVER (PARTITION BY ldts_source,KundeID ORDER BY ldts_source,KundeID) = 1 AS \"IS_DUB_CHECK_OK\" \n\t\t, COALESCE(\"KUNDEID_RAW\", '') <> '' as \"IS_KUNDEID_KEY_CHECK_OK\"\n\t\t \n\t\t, \"IS_LDTS_SOURCE_TYPE_OK\" AND \"IS_EDTS_IN_TYPE_OK\" AND \"IS_ROW_NUMBER_TYPE_OK\" AND \"IS_GEBURTSDATUM_TYPE_OK\" AND \"IS_DUB_CHECK_OK\" AND \"IS_KUNDEID_KEY_CHECK_OK\" is_check_ok\n\t\t \n\t\t,  TO_VARIANT(ARRAY_EXCEPT([REPLACE(IFF(NOT \"IS_LDTS_SOURCE_TYPE_OK\",'{\"ldts_source\":\"' || COALESCE(TO_VARCHAR(\"LDTS_SOURCE_RAW\") ,'') || '\"}','') || IFF(NOT \"IS_EDTS_IN_TYPE_OK\",'{\"edts_in\":\"' || COALESCE(TO_VARCHAR(\"EDTS_IN_RAW\") ,'') || '\"}','') || IFF(NOT \"IS_ROW_NUMBER_TYPE_OK\",'{\"row_number\":\"' || COALESCE(TO_VARCHAR(\"ROW_NUMBER_RAW\") ,'') || '\"}','') || IFF(NOT \"IS_GEBURTSDATUM_TYPE_OK\",'{\"geburtsdatum\":\"' || COALESCE(TO_VARCHAR(\"GEBURTSDATUM_RAW\") ,'') || '\"}','') || IFF(NOT is_dub_check_ok, '{\"dub_check\": \"ldts_source,KundeID\"}','') || IFF(NOT is_KundeID_key_check_ok, '{\"key_check\": \"KundeID\"}',''), '}{','},{')],[''])) chk_all_msg\n\t\tFROM raw_data \n\n\nCROSS JOIN hwm_max \nWHERE ldts_source > hwm_max.hwm_max_ts\n", "relation_name": "WILLIBALD_DATA_VAULT_WITH_DBT.dwh_02_load.load_webshop_kunde", "batch_results": null}], "elapsed_time": 11.342939853668213, "args": {"require_explicit_package_overrides_for_builtin_materializations": true, "profiles_dir": ".", "empty": false, "populate_cache": true, "send_anonymous_usage_stats": true, "vars": {}, "log_path": "/Users/macin/Git/willibald-data-vault-with-dbt-main/logs", "require_nested_cumulative_type_params": false, "version_check": true, "log_level_file": "debug", "require_resource_names_without_spaces": false, "log_format_file": "debug", "macro_debugging": false, "defer": false, "static_parser": true, "cache_selected_only": false, "select": ["load_webshop_kunde"], "introspect": true, "partial_parse": true, "show_resource_report": false, "strict_mode": false, "print": true, "require_batched_execution_for_custom_microbatch_strategy": false, "printer_width": 80, "invocation_command": "dbt run -m load_webshop_kunde", "favor_state": false, "source_freshness_run_project_hooks": false, "use_colors": true, "require_yaml_configuration_for_mf_time_spines": false, "project_dir": "/Users/macin/Git/willibald-data-vault-with-dbt-main", "log_format": "default", "state_modified_compare_vars": false, "exclude": [], "partial_parse_file_diff": true, "state_modified_compare_more_unrendered_values": false, "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "log_file_max_bytes": 10485760, "log_level": "info", "indirect_selection": "eager", "which": "run", "write_json": true, "use_colors_file": true, "skip_nodes_if_on_run_start_fails": false}}